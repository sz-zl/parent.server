Java命名风格：
	一、代码中的命名严禁使用拼音与英文混合的方式,更不允许直接使用中文的方式。要求见名知意,不允许使用拼音。
	
	二、所有命名必须遵从驼峰命名法；包名一律在com.zl.st（项目名缩写）下。
		整个项目使用ssm框架贯穿，采用MVC架构：分为dao层、service层、controller层、实体类全部放到pojo包内，
		与表名一致，与一定的工具类，放在utils包下；
		
	三、常量命名全部大写,单词间用下划线隔开,力求语义表达完整清楚,不要嫌名字长。
	
	四、异常类命名使用 Exception 结尾;测试类命名以它要测试的类的名称开始,以 Test 结尾。当程序出现异常一律自定义处理。
	
	五、中括号是数组类型的一部分,数组定义如下:String[] args;
	
	六、pojo类中布尔类型的变量,都不要加is,否则部分框架解析会引起序列化错误。
	
	七、包名统一使用小写,点分隔符之间有且仅有一个自然语义的英语单词。包名统一使用单数形式,
		但是类名如果有复数含义,类名可以使用复数形式。
		例如：应用工具类包名为com.alibaba.open.util、类名为MessageUtils(此规则参考spring 的框架结构)。
		
	八、接口类中的方法和属性不要加任何修饰符号(public 也不要加),保持代码的简洁性。默认值不用写。
	
	九、不用枚举。
	
	十、各层命名规约:
		A) Service/DAO层方法命名规约
		1) 获取单个对象的方法用get做前缀。
		2) 获取多个对象的方法用list做前缀。
		3) 获取统计值的方法用count做前缀。
		4) 插入的方法用save做前缀。
		5) 删除的方法用remove做前缀。
		6) 修改的方法用update做前缀。
		
		B) 领域模型命名规约
		1) 数据对象:xxxDO,xxx即为数据表名。例如：bookDO为book对象
		2) 数据传输对象:xxxDTO,xxx为业务领域相关的名称。例如：controller层中bookDTO为传递book对象的数据
		3) 展示对象:xxxVO,xxx一般为网页名称。例如：jsp页面获取对象信息
		4) POJO是DO/DTO/BO/VO的统称,禁止命名成xxxPOJO。
		
	十一、IDE的text file encoding设置为UTF-8。
	
	十二、说明:如果非得使用if()…else if()…else…方式表达逻辑，【强制】请勿超过3层
	
	十三、注释规约：
		【规范】类、类属性、类方法的注释必须使用 Javadoc 规范，使用/**内容*/格式，不得使用 //xxx 方式。

		【规范】所有的抽象方法(包括接口中的方法)必须要用 Javadoc 注释、除了返回值、参数、 异常说明外，还必须指出该方法做什么事情，实现什么功能。
		说明:对子类的实现要求，或者调用注意事项，请一并说明。
		
		【风格】方法内部单行注释，在被注释语句上方另起一行，使用//注释。方法内部多行注释使用/* */注释，注意与代码对齐。
		
		【规范】说明每个数据项的用途。
		
		【规范】代码修改的同时，注释也要进行相应的修改，尤其是参数、返回值、异常、核心逻辑 等的修改。
		
		【规范】注释掉的代码尽量要配合说明，而不是简单的注释掉。
		
	十四、异常：
		【规范】捕获异常是为了处理它，不要捕获了却什么都不处理而抛弃之，如果不想处理它，请 将该异常抛给它的调用者。最外层的业务使用者，必须处理异常，将其转化为用户可以理解的 内容。

		【强制】有 try 块放到了事务代码中，catch 异常后，如果需要回滚事务，一定要注意手动回 滚事务。
		
	十五、日志：
		暂时使用log4j、log4j2.
		
	十六、所有mapper（映射）文件都放在dao包下自己的模块中，两者的名称必须一致
